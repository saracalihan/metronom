import{_ as a,c as d,o as r,a as t,b as e}from"./app.a96331c1.js";const x=JSON.parse('{"title":"Module: Utilities","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Functions","slug":"functions","link":"#functions","children":[]}]},{"level":2,"title":"Other","slug":"other","link":"#other","children":[{"level":3,"title":"getKeyValue","slug":"getkeyvalue","link":"#getkeyvalue","children":[]},{"level":3,"title":"hasJsonStructure","slug":"hasjsonstructure","link":"#hasjsonstructure","children":[]},{"level":3,"title":"safeRead","slug":"saferead","link":"#saferead","children":[]},{"level":3,"title":"safeWrite","slug":"safewrite","link":"#safewrite","children":[]},{"level":3,"title":"throwError","slug":"throwerror","link":"#throwerror","children":[]}]},{"level":2,"title":"Utilities","slug":"utilities","link":"#utilities","children":[{"level":3,"title":"isObject","slug":"isobject","link":"#isobject","children":[]}]}],"relativePath":"docs/modules/Utilities.md","lastUpdated":1675123433000}'),i={name:"docs/modules/Utilities.md"},l=t(`<p><a href="./../README.html">metronom</a> / <a href="./../modules.html">Modules</a> / Utilities</p><h1 id="module-utilities" tabindex="-1">Module: Utilities <a class="header-anchor" href="#module-utilities" aria-hidden="true">#</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h3><ul><li><a href="./Utilities.html#isobject">isObject</a></li><li><a href="./Utilities.html#getkeyvalue">getKeyValue</a></li><li><a href="./Utilities.html#hasjsonstructure">hasJsonStructure</a></li><li><a href="./Utilities.html#saferead">safeRead</a></li><li><a href="./Utilities.html#safewrite">safeWrite</a></li><li><a href="./Utilities.html#throwerror">throwError</a></li></ul><h2 id="other" tabindex="-1">Other <a class="header-anchor" href="#other" aria-hidden="true">#</a></h2><h3 id="getkeyvalue" tabindex="-1">getKeyValue <a class="header-anchor" href="#getkeyvalue" aria-hidden="true">#</a></h3><p>▸ <strong>getKeyValue</strong>(<code>key</code>): (<code>obj</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;) =&gt; <code>any</code></p><p>Get value&#39;s of object with key</p><p><strong><code>Example</code></strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> getKeyValue(&quot;name&quot;)(user) // joey</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">wanted key of object</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>fn</code></p><p>▸ (<code>obj</code>): <code>any</code></p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>obj</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</td></tr></tbody></table><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h5><p><code>any</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/31dc5e2/lib/Utilities.ts#L22" target="_blank" rel="noreferrer">Utilities.ts:22</a></p><hr><h3 id="hasjsonstructure" tabindex="-1">hasJsonStructure <a class="header-anchor" href="#hasjsonstructure" aria-hidden="true">#</a></h3><p>▸ <strong>hasJsonStructure</strong>(<code>str</code>): <code>Boolean</code></p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>Boolean</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/31dc5e2/lib/Utilities.ts#L24" target="_blank" rel="noreferrer">Utilities.ts:24</a></p><hr><h3 id="saferead" tabindex="-1">safeRead <a class="header-anchor" href="#saferead" aria-hidden="true">#</a></h3><p>▸ <strong>safeRead</strong>(<code>redisKey</code>, <code>redisClient</code>, <code>schema</code>): <code>Promise</code>&lt;<code>Object</code>&gt;</p><p>Read record from Redis and restruct it like schema</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>redisKey</code></td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Redis record key with <code>keyPrefix</code> and <code>keyUnique</code></td></tr><tr><td style="text-align:left;"><code>redisClient</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">Connected Redis client</td></tr><tr><td style="text-align:left;"><code>schema</code></td><td style="text-align:left;"><a href="./../interfaces/Interfaces.Schema.html"><code>Schema</code></a></td><td style="text-align:left;">Model schema</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>Promise</code>&lt;<code>Object</code>&gt;</p><p>raw object</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/31dc5e2/lib/Utilities.ts#L43" target="_blank" rel="noreferrer">Utilities.ts:43</a></p><hr><h3 id="safewrite" tabindex="-1">safeWrite <a class="header-anchor" href="#safewrite" aria-hidden="true">#</a></h3><p>▸ <strong>safeWrite</strong>(<code>data</code>, <code>redisKey</code>, <code>redisClient</code>, <code>schema?</code>, <code>isFlex?</code>): <code>Promise</code>&lt;<code>Object</code>&gt;</p><p>Control data with isFlex and schema then serialize and write it into redis</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">Raw data</td></tr><tr><td style="text-align:left;"><code>redisKey</code></td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">Redis record key with <code>keyPrefix</code> and <code>keyUnique</code></td></tr><tr><td style="text-align:left;"><code>redisClient</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">Connected Redis client</td></tr><tr><td style="text-align:left;"><code>schema</code></td><td style="text-align:left;"><a href="./../interfaces/Interfaces.Schema.html"><code>Schema</code></a></td><td style="text-align:left;"><code>{}</code></td><td style="text-align:left;">Model schema</td></tr><tr><td style="text-align:left;"><code>isFlex</code></td><td style="text-align:left;"><code>null</code> | <code>Boolean</code></td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;">if it is true you can pass diffirent key from schema</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>Promise</code>&lt;<code>Object</code>&gt;</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/31dc5e2/lib/Utilities.ts#L74" target="_blank" rel="noreferrer">Utilities.ts:74</a></p><hr><h3 id="throwerror" tabindex="-1">throwError <a class="header-anchor" href="#throwerror" aria-hidden="true">#</a></h3><p>▸ <strong>throwError</strong>(<code>message</code>): <code>never</code></p><p>Throw and log error with Metronom&#39;s internal Logger</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4>`,57),s=e("table",{string:""},[e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])]),e("tbody",null,[e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}})])])],-1),n=t('<h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>never</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/31dc5e2/lib/Utilities.ts#L108" target="_blank" rel="noreferrer">Utilities.ts:108</a></p><h2 id="utilities" tabindex="-1">Utilities <a class="header-anchor" href="#utilities" aria-hidden="true">#</a></h2><h3 id="isobject" tabindex="-1">isObject <a class="header-anchor" href="#isobject" aria-hidden="true">#</a></h3><p>▸ <strong>isObject</strong>(<code>variable</code>): <code>Boolean</code></p><p>Utilities</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>variable</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>Boolean</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/31dc5e2/lib/Utilities.ts#L10" target="_blank" rel="noreferrer">Utilities.ts:10</a></p>',14),o=[l,s,n];function h(c,f,u,g,y,b){return r(),d("div",null,o)}const m=a(i,[["render",h]]);export{x as __pageData,m as default};
