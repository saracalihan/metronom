import{_ as s,c as e,o,a}from"./app.a96331c1.js";const F=JSON.parse('{"title":"Lets Start","description":"","frontmatter":{},"headers":[{"level":3,"title":"1. Create Metronom object","slug":"_1-create-metronom-object","link":"#_1-create-metronom-object","children":[]},{"level":3,"title":"2. Define Model","slug":"_2-define-model","link":"#_2-define-model","children":[]},{"level":3,"title":"3. Use query inferfaces","slug":"_3-use-query-inferfaces","link":"#_3-use-query-inferfaces","children":[]}],"relativePath":"getting-started/lets-start.md","lastUpdated":1675120789000}'),n={name:"getting-started/lets-start.md"},l=a(`<h1 id="lets-start" tabindex="-1">Lets Start <a class="header-anchor" href="#lets-start" aria-hidden="true">#</a></h1><h3 id="_1-create-metronom-object" tabindex="-1">1. Create <code>Metronom</code> object <a class="header-anchor" href="#_1-create-metronom-object" aria-hidden="true">#</a></h3><p>The <code>Metronom</code> object is create <code>Model</code> with your defined options like <code>port</code>, <code>host</code>, <code>url</code> or <code>ttl</code>. This step is not required but <strong>recomended</strong> because at the unnormal usage scenario(you need to use diffirent url from default redis ...) you must to pass that options to all <code>Model</code> defines otherwise <code>Metronom</code> object do it automatically.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Metronom</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">LogLevels</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">metronom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> metronom </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Metronom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">redisClientOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">172.168.1.123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1234</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">log</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> LogLevels</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Error</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-define-model" tabindex="-1">2. Define <code>Model</code> <a class="header-anchor" href="#_2-define-model" aria-hidden="true">#</a></h3><p><code>Model</code> is redis hash maper. It has two diffirent flow.</p><ul><li><code>flex</code>: you don&#39;t need to define schema. All hash keys dynamically mapped</li><li><code>schema based</code>: You define type, default value etc. in to the schema and metronom use it read/write operations. Keys not found in the schema are ignored.</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> userModel </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> metronom</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">define</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// const userModel = new Model(</span></span>
<span class="line"><span style="color:#A6ACCD;">  schema</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> redisKeyPrefix</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> modelOptions</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-use-query-inferfaces" tabindex="-1">3. Use query inferfaces <a class="header-anchor" href="#_3-use-query-inferfaces" aria-hidden="true">#</a></h3><p>Now, you can use all metronom queries(<code>Metronom</code>, <code>Model</code> and <code>ModelInstance</code>) like <code>Model.create</code>, <code>Model.findById</code>, <code>Model.destroy</code>, <code>ModelInstance.prototype.save</code>, etc. . For more detail visit <a href="/docs/">here</a></p>`,10),t=[l];function p(c,r,d,i,y,D){return o(),e("div",null,t)}const A=s(n,[["render",p]]);export{F as __pageData,A as default};
